/*Editor: Johnson Gao

 * Date This Project Created: June 2 2019
 * Description Of This Class: 
 */
package journeylove;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *This class procides users an
 * @author Johnson Gao
 */
public class ImagelistTool extends javax.swing.JFrame
{

    static final long serialVersionUID = 1L;

    private ImageList list;
    /**
     * Creates new form ImagelistTool
     * @param list The display image list class.
     */
    public ImagelistTool(ImageList list)
    {
        initComponents();
        this.list = list;
        setBackground(LovelyColors.GLASS_GALL);
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        seaWorldCheckBox = new javax.swing.JCheckBox();
        childrensDay2019 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        may2019CheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        exportButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clear & Restore");
        setBackground(new java.awt.Color(51, 51, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Imagelist Tool");

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setText("CLEAR");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Restore");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        seaWorldCheckBox.setText("From Sea world 2018.5.20");
        seaWorldCheckBox.setOpaque(false);

        childrensDay2019.setText("From Children's day 2019.6.1");

        jLabel2.setText("Restore List");

        feedbackLabel.setText("Click \"clear\"will delete all of your image in your list.");

        may2019CheckBox.setText("From May 2019");

        jLabel3.setText("Click \"Restore\" will store the memories you selected back in your list");

        exportButton.setIcon(new ImageManager().openIcon("save.png",16,16));
        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exportButtonActionPerformed(evt);
            }
        });

        importButton.setIcon(new ImageManager().openIcon("newFile.png", 16, 16));
        importButton.setText("Import");
        importButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                importButtonActionPerformed(evt);
            }
        });

        messageLabel.setText("Please click one to start.");

        jLabel4.setText("Click \"Export\" will export all your images information into a .journey");

        jLabel5.setText("file, save in your default saving address\\Export");

        jLabel6.setText("You can also click\"Import\" to import data from .journey file.");

        try
        {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(SGC.getImageSublists()));
        }catch(Exception ex)
        {
            new Warning("Cannot connect to db!");
        }

        jLabel7.setText("Use List:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(feedbackLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(exportButton))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(messageLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(may2019CheckBox)
                                                    .addComponent(seaWorldCheckBox)
                                                    .addComponent(childrensDay2019)
                                                    .addComponent(jButton1))
                                                .addGap(47, 47, 47))
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(importButton)))
                                .addGap(33, 33, 33))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(exportButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(may2019CheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(childrensDay2019)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seaWorldCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(importButton)))
                .addGap(30, 30, 30)
                .addComponent(messageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(feedbackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null,
                        "Are you sure to clear your whole image list??", "Delection Confirmation",
                        JOptionPane.YES_NO_OPTION);

                if (confirmed == JOptionPane.YES_OPTION)
                {
            try
            {
                SGC.doStatement("DELETE FROM " + getSelectedList());
            } catch (SQLException ex)
            {
                Logger.getLogger(ImagelistTool.class.getName()).log(Level.SEVERE, null, ex);
                feedbackLabel.setText("OOPS failed to edit.");
            }
                } 
                list.refreshTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(seaWorldCheckBox.isSelected())
        {
            
            try{
            for (int i = 0; i < ImageURLList.TEXT_QZONE1.length; i++)
            {
                String name = "5.20 de 回忆@ 海上世界 " + (i+1);
                SGC.insertImageIntoList(new DisplayImage(name, ImageURLList.TEXT_QZONE1[i], 3, randomInt(1000, 9999)),getSelectedList());
            }
            }catch(SQLException sqle)
            {
                feedbackLabel.setText("Sorry, failed to edit.");
            }
        }
        //
        if(childrensDay2019.isSelected())
        {
             try{
            for (int i = 0; i < ImageURLList.CHILDRENS_DAY2019_ADDRESSES.length; i++)
            {
                String name = "六一快乐 " + (i+1);
                SGC.insertImageIntoList(new DisplayImage(name, ImageURLList.CHILDRENS_DAY2019_ADDRESSES[i], 3, randomInt(1000, 9999)),getSelectedList());
            }
            }catch(SQLException sqle)
            {
                feedbackLabel.setText("Sorry, failed to edit.");
            }
            
        }
        if(may2019CheckBox.isSelected())
        {
            try
            {
                for (DisplayImage RTORIGIN_MAY2019 : ImageURLList.RTORIGIN_MAY2019)
                {
                    SGC.insertImageIntoList(RTORIGIN_MAY2019,getSelectedList());
                }
            } catch (SQLException e)
            {
                feedbackLabel.setText("Cannot contact database!!");
            }
        }
        list.refreshTable();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exportButtonActionPerformed
    {//GEN-HEADEREND:event_exportButtonActionPerformed
        
        try
        {
            if(!SGC.getDefaultSavingPath().isEmpty())
            {
            // TODO add your handling code here:
            SGC.exportImageList(new File(SGC.getDefaultSavingPath() + "\\Export"),getSelectedList());
            messageLabel.setText("Exported into your default saving path \\ Export!");
            }else
            {
                messageLabel.setText("You don't have a default saving address yet!");
            }
        } catch (SQLException ex)
        {
            Logger.getLogger(ImagelistTool.class.getName()).log(Level.SEVERE, null, ex);
            messageLabel.setText("Failed to load your database.");
        } catch (IOException ex)
        {
            Logger.getLogger(ImagelistTool.class.getName()).log(Level.SEVERE, null, ex);
            messageLabel.setText("Cannot open your file.");
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_importButtonActionPerformed
    {//GEN-HEADEREND:event_importButtonActionPerformed
        try
        {
            // TODO add your handling code here:
            JFileChooser chooser = new JFileChooser(SGC.getDefaultSavingPath());
            chooser.setFileFilter(new FileNameExtensionFilter("Journey File/txt file", "journey","txt"));
            int confirmed = chooser.showOpenDialog(null);
            if(confirmed == JFileChooser.APPROVE_OPTION)
            {
                SGC.importIntoImageList(chooser.getSelectedFile(), getSelectedList());
                list.refreshTable();
            }
        } catch (SQLException ex)
        {
            Logger.getLogger(ImagelistTool.class.getName()).log(Level.SEVERE, null, ex);
            messageLabel.setText("Failed to load into db");
        } catch (IOException ex)
        {
            Logger.getLogger(ImagelistTool.class.getName()).log(Level.SEVERE, null, ex);
            messageLabel.setText("Cannot open your file.");
        }
    }//GEN-LAST:event_importButtonActionPerformed

    public int randomInt(int lowerBound, int upperBound)
    {
        return lowerBound + (int) (Math.random() * (upperBound - lowerBound + 1));
    }
    public String getSelectedList()
    {
        int index = jComboBox1.getSelectedIndex();
        if(index == 0)
        {
            return SecretGardenConnection.ALL_IMAGES_TABLE_NAME;
        }else 
        {
            return SecretGardenConnection.IMAGES_SUBLIST_PREFIX + jComboBox1.getItemAt(index);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ImagelistTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ImagelistTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ImagelistTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ImagelistTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            ImageList imageList = new ImageList();
            imageList.setVisible(true);
            new ImagelistTool(imageList).setVisible(true);
        });
    }
final SecretGardenConnection SGC = new SecretGardenConnection();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox childrensDay2019;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JButton importButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JCheckBox may2019CheckBox;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JCheckBox seaWorldCheckBox;
    // End of variables declaration//GEN-END:variables
}
